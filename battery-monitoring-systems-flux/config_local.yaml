# Local Configuration for Battery Monitoring System
# This file contains all configuration settings for local development

# Application Settings
app:
  name: "Battery Monitoring System"
  version: "1.0.0"
  debug: true
  host: "0.0.0.0"
  port: 8000
  websocket_port: 8001
  reload: true

# Database Configuration
database:
  type: "sqlite"  # For local development
  url: "sqlite:///./battery_monitoring.db"
  # Production settings (commented out)
  # type: "postgresql"
  # host: "localhost"
  # port: 5432
  # database: "battery_monitoring"
  # username: "battery_user"
  # password: "secure_password"

# ML Model Configuration
ml:
  # Model paths
  models_dir: "./models"
  anomaly_model_path: "./models/anomaly_detection.pkl"
  prediction_model_path: "./models/cell_prediction.pkl"
  forecasting_model_path: "./models/forecasting.pkl"
  
  # Training parameters
  test_size: 0.2
  random_state: 42
  cv_folds: 5
  
  # Anomaly detection
  anomaly:
    contamination: 0.1
    n_estimators: 100
    max_samples: "auto"
  
  # Prediction thresholds
  prediction:
    confidence_threshold: 0.7
    dead_cell_threshold: 0.3
    alive_cell_threshold: 0.7
  
  # Forecasting
  forecasting:
    forecast_steps: 25
    lookback_window: 50
    min_samples: 100

# LLM Configuration
llm:
  provider: "ollama"
  model: "llama2:7b"
  base_url: "http://localhost:11434"
  temperature: 0.7
  max_tokens: 1000
  timeout: 30
  
  # Prompts
  prompts:
    system: "You are an AI assistant for battery monitoring systems. You help analyze battery data and provide insights."
    anomaly_analysis: "Analyze the following battery cell data for anomalies in voltage, temperature, and specific gravity:"
    prediction_analysis: "Based on the battery cell patterns, predict if the cell is likely to be dead or alive:"
    forecasting_analysis: "Analyze the battery cell trends and predict future values:"

# MLOps Configuration
mlops:
  # MLflow
  mlflow:
    tracking_uri: "sqlite:///mlflow.db"
    experiment_name: "battery_monitoring"
    artifact_location: "./mlruns"
  
  # Model monitoring
  monitoring:
    drift_threshold: 0.1
    performance_threshold: 0.8
    alert_interval: 300  # 5 minutes
    retention_days: 30
  
  # Metrics
  metrics:
    - "accuracy"
    - "precision"
    - "recall"
    - "f1_score"
    - "mae"
    - "rmse"
    - "mape"

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "./logs/project_master.log"
  max_size: 10485760  # 10MB
  backup_count: 5
  
  # Module-specific logs
  modules:
    data_processing: "./logs/data_processing.log"
    ml_training: "./logs/ml_training.log"
    anomaly_detection: "./logs/anomaly_detection.log"
    prediction: "./logs/prediction.log"
    forecasting: "./logs/forecasting.log"
    web_app: "./logs/web_app.log"
    llm: "./logs/llm.log"
    mlops: "./logs/mlops.log"

# Data Configuration
data:
  input_file: "./data/data.xlsx"
  processed_dir: "./data/processed"
  features_dir: "./data/features"
  
  # Key columns for analysis
  key_columns:
    - "cell_number"
    - "cell_voltage"
    - "cell_temperature"
    - "cell_specific_gravity"
    - "device_id"
    - "serial_number"
    - "packet_datetime"
  
  # Data validation
  validation:
    voltage_range: [2.0, 4.2]
    temperature_range: [0, 60]
    specific_gravity_range: [1.0, 1.3]
    max_missing_percentage: 0.1

# Web Application Configuration
web_app:
  # Frontend
  frontend:
    port: 3000
    api_url: "http://localhost:8000"
    websocket_url: "ws://localhost:8001"
  
  # Backend API
  api:
    title: "Battery Monitoring API"
    description: "API for battery monitoring system with ML/LLM capabilities"
    version: "1.0.0"
    docs_url: "/docs"
    redoc_url: "/redoc"
  
  # WebSocket
  websocket:
    ping_interval: 20
    ping_timeout: 20
    max_connections: 100

# Security Configuration
security:
  secret_key: "your-secret-key-change-in-production"
  algorithm: "HS256"
  access_token_expire_minutes: 30
  
  # CORS
  cors:
    origins: ["http://localhost:3000", "http://127.0.0.1:3000"]
    methods: ["GET", "POST", "PUT", "DELETE"]
    headers: ["*"]

# Performance Configuration
performance:
  # Timeouts
  request_timeout: 30
  model_inference_timeout: 60
  data_processing_timeout: 300
  
  # Batch processing
  batch_size: 1000
  max_workers: 4
  
  # Caching
  cache_ttl: 3600  # 1 hour
  cache_max_size: 1000

# Development Configuration
development:
  # Auto-reload
  auto_reload: true
  reload_dirs: ["./battery_monitoring"]
  
  # Testing
  test_data_size: 100
  mock_external_services: true
  
  # Debugging
  enable_debugger: true
  log_sql_queries: true
  profile_performance: false 