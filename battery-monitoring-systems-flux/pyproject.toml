[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "battery-monitoring-systems-flux"
version = "1.0.0"
description = "Comprehensive Battery Monitoring System with ML/LLM and MLOps"
authors = [
    {name = "Battery Monitoring Team", email = "team@battery-monitoring.com"}
]
readme = "README-local.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    # Core ML/AI
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.10.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "kaleido>=0.2.1",
    
    # Deep Learning (commented for compatibility)
    # "torch>=2.0.0",
    # "torchvision>=0.15.0",
    # "tensorflow>=2.13.0",
    
    # Time Series (commented for compatibility)
    # "statsmodels>=0.14.0",
    # "prophet>=1.1.4",
    # "pmdarima>=2.0.3",
    
    # Anomaly Detection (commented for compatibility)
    # "pyod>=1.1.0",
    # "isolation-forest>=0.2.0",
    
    # Feature Engineering (commented for compatibility)
    # "feature-engine>=1.6.0",
    # "category-encoders>=2.6.0",
    
    # Data Processing
    "openpyxl>=3.1.0",
    "xlrd>=2.0.1",
    "python-dateutil>=2.8.2",
    
    # Web Framework
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0.0",
    "python-multipart>=0.0.6",
    
    # LLM Integration (commented for compatibility)
    # "ollama>=0.1.0",
    # "langchain>=0.0.300",
    # "langchain-community>=0.0.10",
    # "deepeval>=0.8.0",
    # "openai>=1.0.0",
    
    # MLOps & Monitoring (commented for compatibility)
    # "mlflow>=2.6.0",
    # "evidently>=0.3.0",
    # "prometheus-client>=0.17.0",
    # "grafana-api>=1.0.3",
    
    # Database
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    # "psycopg2-binary>=2.9.0",  # Commented for local development
    
    # Configuration & Environment
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.24.0",
    
    # Utilities
    "tqdm>=4.65.0",
    "rich>=13.4.0",
    "click>=8.1.0",
    "structlog>=23.1.0",
    "colorama>=0.4.6",
    
    # Security (commented for local development)
    # "cryptography>=41.0.0",
    # "bcrypt>=4.0.0",
    
    # Async (commented for compatibility)
    # "asyncio-mqtt>=0.13.0",
    "aiofiles>=23.1.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
]

mlops = [
    "kubeflow>=1.8.0",
    "kubernetes>=27.0.0",
    "docker>=6.1.0",
    "azure-ml>=1.50.0",
    "boto3>=1.28.0",
]

[project.scripts]
battery-monitor = "battery_monitoring.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["battery_monitoring*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=battery_monitoring",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["battery_monitoring"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 